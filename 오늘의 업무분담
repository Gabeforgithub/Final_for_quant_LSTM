<업무 분담4> 1/29/토 긴급임무~
currencies, world_indices, futures 3개 자산 클래스의 4개 columns(High, Low, Adj Close, Change)를 재모델링한다.

<역할>
# 영준 : currencies 24개? * 4 에 대해 다시 재모델링 -> 96개의 rmse (24, 4) shape의 DataFrame으로 저장
 영준님의 코드 완성시 12_currencies_remodeling.py 다음 파일에 추가하여 pull request 부탁드립니다.
  지수 : world_indicies와 갑래님의 futures를 같이 돌림
  갑래 : 코드 컨펌

A. 각 자산클래스의 각 column에 대한 rmse(mse)를 구해서 데이터 프레임에 저장 (각각 minmaxscaling 후)
B. epochs 는 100으로 하되 early_stopping 걸기
 from keras.callbacks import EarlyStopping
 early_stopping = EarlyStopping(monitor='val_loss', patience=5)
 model.fit(X_train, Y_train, epochs=100, validation_data=(X_test, Y_test), callbacks=[early_stopping])
아마 위의 코드?

C 파일 저장 명의 통일
1. minmaxscaler
./minmaxscaler/'{}_{}_minmaxscaler.pickle'.format(자산이름, column이름)
 예시) USD/HKD_Adj Close_minmaxscaler.pickle
2. train_test_split
./train_test_split/'{}_{}_train_test_split.npy'.format(자산이름, column이름)
3. model
./models/'{}_{}_model.h5'.format(자산이름, column이름)
4. 마지막 60개 데이터프레임(원래 30개엿는데 60개로 바꾸는게 좋을 듯함. pickle아니고 바로 열람할 수 있는 csv형태로
./updated/'{}_{}_updated.csv'.format(자산이름, column이름)      <= 추후 저장용이성을 위해 'updated'폴더에 저장
ex) to_csv('./updated/{}_{}_updated.csv'.format('Gold', 'High')




